name: manual Build Playerctl ARM64

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag to build (optional)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: altdesktop/playerctl
          submodules: recursive
          ref: ${{ github.event.inputs.tag }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and run container
        run: |
          # Build the image
          docker buildx build \
            --platform linux/arm64 \
            --load \
            -t playerctl-arm64:latest \
            --build-arg DEBIAN_FRONTEND=noninteractive \
            .
          
          # Create and start container
          docker run -d --platform linux/arm64 --name playerctl-build \
            playerctl-arm64:latest \
            sleep infinity
          
          # Wait for container to start
          sleep 5
          
          # Create artifacts directory
          mkdir -p artifacts
          
          # List files in container for debugging
          echo "Searching for built files in container..."
          docker exec playerctl-build find /usr -name "libplayerctl*"
          docker exec playerctl-build find /usr -name "playerctl"
          
          # Copy build artifacts
          echo "Copying library..."
          docker cp playerctl-build:/usr/lib/aarch64-linux-gnu/libplayerctl.so.2.0.0 artifacts/ || \
          docker cp playerctl-build:/usr/lib/libplayerctl.so.2.0.0 artifacts/ || \
          echo "Failed to copy library file"
          
          echo "Copying executable..."
          docker cp playerctl-build:/usr/bin/playerctl artifacts/
          
          # Create symlinks
          cd artifacts
          if [ -f "libplayerctl.so.2.0.0" ]; then
            ln -s libplayerctl.so.2.0.0 libplayerctl.so.2
            ln -s libplayerctl.so.2 libplayerctl.so
          fi
          
          # Stop and remove container
          docker stop playerctl-build
          docker rm playerctl-build
      
      - name: List artifacts
        run: |
          echo "Build artifacts:"
          ls -lah artifacts/
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: playerctl-arm64-build
          path: artifacts/
          retention-days: 7
