name: 1 Build playerctl for Armbian

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装 ARM 交叉编译工具链
      run: |
        sudo apt update
        sudo apt install -y build-essential meson ninja-build \
                            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
                            libglib2.0-dev:arm64 libgobject-2.0-dev:arm64 \
                            libgio-2.0-dev:arm64 libdbus-1-dev:arm64 \
                            libjson-glib-dev:arm64 libreadline-dev:arm64 \
                            bash-completion:arm64 pkg-config

    - name: 设置环境变量
      run: |
        export PKG_CONFIG_PATH=/usr/aarch64-linux-gnu/lib/pkgconfig:/usr/aarch64-linux-gnu/share/pkgconfig
        export PKG_CONFIG_LIBDIR=$PKG_CONFIG_PATH
        export PKG_CONFIG_SYSROOT_DIR=/
        export SYSROOT=/usr/aarch64-linux-gnu
        export CFLAGS="--sysroot=$SYSROOT -I$SYSROOT/include"
        export LDFLAGS="--sysroot=$SYSROOT -L$SYSROOT/lib"

    - name: 设置交叉编译 `cross.txt`
      run: |
        echo "[binaries]
        c = 'aarch64-linux-gnu-gcc --sysroot=/usr/aarch64-linux-gnu'
        cpp = 'aarch64-linux-gnu-g++ --sysroot=/usr/aarch64-linux-gnu'
        ar = 'aarch64-linux-gnu-ar'
        strip = 'aarch64-linux-gnu-strip'
        pkg-config = 'aarch64-linux-gnu-pkg-config'

        [host_machine]
        system = 'linux'
        cpu_family = 'aarch64'
        cpu = 'armv8-a'
        endian = 'little'" > cross.txt

    - name: 编译 playerctl
      run: |
        meson setup --cross-file=cross.txt -Dintrospection=false build
        cd build
        ninja

    - name: 打包 `.tar.gz`
      run: |
        tar -czvf playerctl-armbian.tar.gz -C build playerctl

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: playerctl-armbian
        path: playerctl-armbian.tar.gz
